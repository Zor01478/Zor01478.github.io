<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on 戴头盔的招财</title>
    <link>https://Zor01478.github.io/post/</link>
    <description>Recent content in Posts on 戴头盔的招财</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 01 Feb 2021 17:48:06 +0800</lastBuildDate><atom:link href="https://Zor01478.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>PHP与Java反序列化浅析（下篇）</title>
      <link>https://Zor01478.github.io/2021/02/php%E4%B8%8Ejava%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%B5%85%E6%9E%90%E4%B8%8B%E7%AF%87/</link>
      <pubDate>Mon, 01 Feb 2021 17:48:06 +0800</pubDate>
      
      <guid>https://Zor01478.github.io/2021/02/php%E4%B8%8Ejava%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%B5%85%E6%9E%90%E4%B8%8B%E7%AF%87/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;Web漏洞-Java反序列化&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>PHP与Java反序列化浅析（上篇）</title>
      <link>https://Zor01478.github.io/2021/01/php%E4%B8%8Ejava%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%B5%85%E6%9E%90%E4%B8%8A%E7%AF%87/</link>
      <pubDate>Sun, 31 Jan 2021 16:26:02 +0800</pubDate>
      
      <guid>https://Zor01478.github.io/2021/01/php%E4%B8%8Ejava%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%B5%85%E6%9E%90%E4%B8%8A%E7%AF%87/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;Web漏洞-PHP反序列化&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>关于struct的字节数计算（对齐）</title>
      <link>https://Zor01478.github.io/2021/01/%E5%85%B3%E4%BA%8Estruct%E7%9A%84%E5%AD%97%E8%8A%82%E6%95%B0%E8%AE%A1%E7%AE%97%E5%AF%B9%E9%BD%90/</link>
      <pubDate>Thu, 28 Jan 2021 15:16:13 +0800</pubDate>
      
      <guid>https://Zor01478.github.io/2021/01/%E5%85%B3%E4%BA%8Estruct%E7%9A%84%E5%AD%97%E8%8A%82%E6%95%B0%E8%AE%A1%E7%AE%97%E5%AF%B9%E9%BD%90/</guid>
      <description>&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;struct&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;MyStruct&lt;/span&gt; {
    &lt;span style=&#34;color:#66d9ef&#34;&gt;double&lt;/span&gt; dda1; &lt;span style=&#34;color:#75715e&#34;&gt;// 占8字节
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;char&lt;/span&gt; dda; &lt;span style=&#34;color:#75715e&#34;&gt;// 占1字节
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; type; &lt;span style=&#34;color:#75715e&#34;&gt;// 占4字节
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;};
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;若按照我们的第一印象来计算那sizeof(Mystruct)的结果将是8 + 1 + 4 = 13字节，但是实际上你在vscode上跑一下就会知道结果输出将会是16，那么是为什么呢？原因就是编译器为了提高CPU的存储速度，&lt;strong&gt;会对变量的起始地址做了对齐处理&lt;/strong&gt;。（在默认情况下，例如VC规定各&lt;strong&gt;成员变量存放的起始地址相对于结构的起始地址的偏移量必须为该变量的类型所占用的字节数的倍数&lt;/strong&gt;。下面列出常用类型的对齐方式(vc6.0,32位系统)）&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
